cargo-features = ["per-package-target"]

[package]
name = "hardware_simulator"
version = "0.2.0"
authors = ["Eric Yu <zbrachinara@gmail.com>"]
edition = "2018"
default-target = "wasm32-unknown-unknown"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
web = ["console_error_panic_hook", "wee_alloc", "wasm-bindgen", "wasm-bindgen-futures"]
native = ["futures-lite"]
compile_resources = []

[dependencies]
wasm-bindgen = { version = "0.2.63", optional = true }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
wasm-bindgen-futures = { version = "0.4.29", optional = true }
futures-lite = { version = "1.12.0", optional = true }
eframe = { version = "0.17.0", default-features = false, features = ["default_fonts", "egui_glium"] }
rfd = "0.8.0"
derive_more = "0.99.17"
include_dir = "0.7.2"
once_cell = "1.9.0"
image = "0.24.1"
itertools = "0.10.3"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

# TODO: Move into cargo.toml
#[profile.release]
## Tell `rustc` to optimize for small code size.
#opt-level = "s"
